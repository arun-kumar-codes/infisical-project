// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const OrgGatewayConfigSchema = z.object({
  id: z.string().uuid(),
  rootCaKeyAlgorithm: z.string(),
  rootCaIssuedAt: z.date(),
  rootCaExpiration: z.date(),
  rootCaSerialNumber: z.string(),
  encryptedRootCaCertificate: zodBuffer,
  encryptedRootCaPrivateKey: zodBuffer,
  clientCaIssuedAt: z.date(),
  clientCaExpiration: z.date(),
  clientCaSerialNumber: z.string().nullable().optional(),
  encryptedClientCaCertificate: zodBuffer,
  encryptedClientCaPrivateKey: zodBuffer,
  clientCertSerialNumber: z.string(),
  clientCertKeyAlgorithm: z.string(),
  clientCertIssuedAt: z.date(),
  clientCertExpiration: z.date(),
  encryptedClientCertificate: zodBuffer,
  encryptedClientPrivateKey: zodBuffer,
  gatewayCaIssuedAt: z.date(),
  gatewayCaExpiration: z.date(),
  gatewayCaSerialNumber: z.string(),
  encryptedGatewayCaCertificate: zodBuffer,
  encryptedGatewayCaPrivateKey: zodBuffer,
  orgId: z.string().uuid(),
  createdAt: z.date(),
  updatedAt: z.date()
});

export type TOrgGatewayConfig = z.infer<typeof OrgGatewayConfigSchema>;
export type TOrgGatewayConfigInsert = Omit<z.input<typeof OrgGatewayConfigSchema>, TImmutableDBKeys>;
export type TOrgGatewayConfigUpdate = Partial<Omit<z.input<typeof OrgGatewayConfigSchema>, TImmutableDBKeys>>;
